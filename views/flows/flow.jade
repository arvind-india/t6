doctype html
html(lang='en')
  include ../includes/head.jade
  body
    include ../includes/navbar.jade

    .-o-container-fluid
      .row.side-body.hidden-xs
        .col-sm-12
          h2.fa.fa-2x.fa-random &nbsp;Flow&nbsp;
            strong #{flow.name}
          if (message && message.type && message.value)
            div.alert(class='alert-#{message.type}', role='alert') !{message.value}

      .row.side-body
        .col-sm-12.col-md-12.col-md-offset-0
          div
            dl.dl-horizontal
              dt Id:
              dd
                span.label.label-warning.ellipis #{flow.id}

              dt Name:
              dd #{flow.name}
                br/
                i Created: #{moment(flow.meta.created).format('DD/MM/YYYY, HH:mm')} - Updated: #{moment(flow.meta.updated).format('DD/MM/YYYY, HH:mm')} - Revision: #{flow.meta.revision}

              -if (flow.mqtt_topic)
                dt MQTT Topic:
                dd #{flow.mqtt_topic}
              -end
              
              dt Datatype:
              dd #{flow.data_type}

              dt Unit:
              dd #{unit.format}
                - if (unit.name)
                  |  (Name: #{unit.name}, Type: #{unit.type})

              dt Permission:
              dd
                span.label.label-danger #{flow.permission}
              
              - if (flow.objects) {
                dt Objects:
                - for(object in flow.objects) {
                  dd
                    span.label.label-default #{flow.objects[object]}
                - }
              - }

              dt API Flow endpoint:
              dd
                span.label.label-default.ellipis #{baseUrl}/v2.0.1/flows/#{flow.id}
                
              dt API Data endpoint:
              dd
                span.label.label-default.ellipis #{baseUrl}/v2.0.1/data/#{flow.id}

          .form-group.col-md-12
            ul.list-inline
              li
                a.btn.btn-primary.btn-sm(href='/flows/#{flow.id}/edit')
                  span.fa.fa-pencil-square-o  Edit
              
              li
                a.btn.btn-danger.btn-sm.sweet-5#remove(href='#', onclick="return false;")
                  span.fa.fa-trash-o  Remove

    .-o-container-fluid
      .row.side-body
        .col-sm-12
          include ../snippets/flowgraph.jade

    include ../includes/foot.jade
    p &nbsp;
    p &nbsp;
    p &nbsp;

    include ../includes/foot.jade
  link(href='#{baseUrlCdn}/css/sweetalert/sweetalert.css', rel='stylesheet')
  script(src='#{baseUrlCdn}/js/sweetalert/sweetalert.js')
  script.
    document.querySelector('.sweet-5').onclick = function(){
      swal({
        title: "Are you sure?",
        text: "Are you sure to remove #{flow.name} ?<br /><small>This action will erase all the data from this Flow</small>.",
        html: true,
        type: "error",
        showCancelButton: true,
        confirmButtonClass: "btn-danger",
        confirmButtonText: "Yes, delete it!",
        cancelButtonText: "No, cancel",
        closeOnConfirm: false,
        closeOnCancel: true
      },
      function(isConfirm) {
        if (isConfirm) {
          document.location.href='/flows/#{flow.id}/remove';
        } else {
          //
        }
      });
    };
    
  link(href='#{baseUrlCdn}/css/bootstrap-colorpicker/bootstrap-colorpicker-2.3.3.min.css', rel='stylesheet')
  script(type='text/javascript', src='#{baseUrlCdn}/js/bootstrap-colorpicker/bootstrap-colorpicker-2.3.3.min.js')

    script(type='text/javascript').
      // Types:
      // datatype, unit, startdate, enddate, background, lineColor, fillColor, normalRangeColor
      var snippetsTypes = {
        "valuedisplay": {
          "parameters":[
            {"label":"Datatype", "id":"datatype", "type":"text", default:"float", placeholder:"Datatype", isMandatory: false},
            {"label":"Unit", "id":"unit", "type":"text", default:"°C", placeholder:"Unit", isMandatory: false},
            {"label":"Background Color", "id":"background", "type":"colorpicker", default:"", placeholder:"", isMandatory: false},
            {"label":"Line Color", "id":"lineColor", "type":"colorpicker", default:"", placeholder:"", isMandatory: false},
            {"label":"Fill Color", "id":"fillColor", "type":"colorpicker", default:"", placeholder:"", isMandatory: false},
            {"label":"Normal Range Color", "id":"normalRangeColor", "type":"colorpicker", default:"", placeholder:"", isMandatory: false},
          ]
        },
        "boolean": {
          "parameters":[
            {"label":"Background Color", "id":"background", "type":"colorpicker", default:"#5595c2", placeholder:"", isMandatory: false}
          ]
        },
        "flowgraph": {
          "parameters":[
            {"label":"Datatype", "id":"datatype", "type":"text", default:"float", placeholder:"Datatype", isMandatory: false},
            {"label":"Unit", "id":"unit", "type":"text", default:"°C", placeholder:"Unit", isMandatory: false},
            {"label":"Start date", "id": "startdate", "type":"text", default:"", placeholder:"", isMandatory: false},
            {"label":"End date", "id": "enddate", "type":"text", default:"", placeholder:"", isMandatory: false}
          ]
        },
        "weather": {
          "parameters":[]
        }
      };
      
      $(function () {
        $('.iconpicker li .form-group input').on('click', function(){
          var checkbox = $(this);
          if (checkbox.is(':checked')) {
            checkbox.addClass('active');
          } else {
            checkbox.removeClass('active');
          }
        });
        
        $('li.btn-radio a').click(function(e) {
          var type = $(this).attr("data-type");
          $('#type').val(type);
          if ( type && snippetsTypes[type] ) {
            var output = "";
            $.each((snippetsTypes[type]).parameters, function(i, parameter) {
              if ( parameter.type === "text" ) {
                output += "<div class='form-group'><label for='"+parameter.id+"' class='control-label'>"+parameter.label+":";
                if ( parameter.isMandatory === true ) {
                  output += "<span class='mandatory'>*</span>";
                }
                output += "</label><input name='p["+parameter.id+"]' placeholder='"+parameter.placeholder+"' id='"+parameter.id+"' value='"+parameter.default+"' class='form-control' type='text'></div>";

              } else if( parameter.type === "radio" ) {
                output += parameter.name+" RADIO "+parameter.default;

              } else if( parameter.type === "colorpicker" ) {
                output += "<div class='form-group'><label for='"+parameter.id+"' class='control-label'>"+parameter.label+":</label><div class='colorpicker input-group colorpicker-component colorpicker-element'><span class='input-group-addon'><i></i></span><input name='p["+parameter.id+"]' id='"+parameter.id+"' value='"+parameter.default+"' class='form-control' type='text'></div></div>";

              } else if( parameter.type === "select" ) {
                output += "";

              } else if( parameter.type === "multiselect" ) {
                output += "";

              } else {
                output += parameter.label+" "+parameter.default;

              }
            })
            $('#specific').html(output);
            $('.colorpicker').colorpicker();
          }
        });
      });