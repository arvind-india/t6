doctype html
html(lang='en')
  include ../includes/head.jade
  body
    include ../includes/navbar.jade

    .-o-container-fluid
      .row.side-body.hidden-xs
        .col-sm-12
          h2.fa.fa-2x.fa-random &nbsp;Flow&nbsp;
            strong #{flow.name}
          if (message && message.type && message.value)
            div.alert(class='alert-#{message.type}', role='alert') !{message.value}

      .row.side-body
        .col-sm-12.col-md-8.col-md-offset-0
          div
            dl.dl-horizontal
              dt Name:
              dd
                strong #{flow.name}
                br/
                i Created: #{moment(flow.meta.created).format('DD/MM/YYYY, HH:mm')} - Updated: #{moment(flow.meta.updated).format('DD/MM/YYYY, HH:mm')} - Revision: #{flow.meta.revision}

              dt Id:
              dd
                span.label.label-default.ellipis.fa.fa-random  #{flow.id}

              -if (flow.mqtt_topic)
                dt MQTT Topic:
                dd
                  -if(flow.mqtt_topic)
                    span.label.label-warning.fa.fa-commenting-o  #{flow.mqtt_topic}
                  -else
                    span  
              -end
              
              dt Datatype:
              dd #{flow.data_type}

              dt Unit:
              dd #{unit.format}
                - if (unit.name)
                  |  (Name: #{unit.name}, Type: #{unit.type})

              dt Permission:
              dd
                span.label.label-danger #{flow.permission}
                
              dt
              dd
                p 
                ul.list-inline
                  li
                    a.btn.btn-primary.btn-sm(href='/flows/#{flow.id}/edit')
                      span.fa.fa-pencil-square-o  Edit
                  
                  li
                    a.btn.btn-danger.btn-sm.sweet-5#remove(href='#', onclick="return false;")
                      span.fa.fa-trash-o  Delete Flow
              
        .col-sm-12.col-md-4.col-md-offset-0
          .panel.with-nav-tabs.panel-default
            .panel-heading
              ul.nav.nav-tabs.nav-justified
                li.active(role='presentation')
                  a.fa.fa-cubes(href='#objects', data-toggle='tab') 
                    strong Objects
                li
                  a.fa.fa-terminal(href='#api', data-toggle='tab') 
                    strong API
            .panel-body
              .tab-content
                .tab-pane.fade.in.active#objects
                  h3 Objects
                  - if (flow.objects) {
                    .list-unstyled.list-group
                      - for(object in objects) {
                        //-li #{objects[object].name}
                        - var o=objects[object].id
                        - if( (flow.objects).indexOf(o) > -1 )
                          a.clearfix.list-group-item(href='/objects/#{objects[object].id}')
                            span
                              strong  #{objects[object].name}
                            div.col-xs-4.label.label-default.fa.fa-cube.ellipsis.pull-right(data-toggle='tooltip', data-placement='top', title='#{objects[object].id}')  #{objects[object].id}
                        - end
                      - }
                  - }

                .tab-pane.fade#api
                    blockquote.fa.fa-comment  Be sure you grant access to this Flow from 
                      a.btn.btn-primary.fa.fa-flash(href='/keys')  API Key 

                    h3 Flow endpoint
                    span.label.label-default.ellipis #{baseUrl}/v#{version}/flows/#{flow.id}
                    br/
                    span e.g.: 
                    pre.language-markup curl -X GET -i #{baseUrl}/v#{version}/flows/#{flow.id} -H "Accept: application/json" -H "Content-Type: application/json" -H 'Connection: keep-alive' -H 'Authorization: Bearer :bearer'

                    h3 Data endpoint
                    span.label.label-default.ellipis #{baseUrl}/v#{version}/data/#{flow.id}
                    br/
                    span e.g.:
                    pre.language-markup curl -X GET -i #{baseUrl}/v#{version}/data/#{flow.id} -H "Accept: application/json" -H "Content-Type: application/json" -H 'Connection: keep-alive' -H 'Authorization: Bearer :bearer'


    .-o-container-fluid
      .row.side-body
        .col-sm-12
          include ../snippets/flowgraph.jade

    include ../includes/foot.jade
    p &nbsp;
    p &nbsp;
    p &nbsp;

    link(href='#{baseUrlCdn}/css/sweetalert/sweetalert.css', rel='stylesheet')
    script(src='#{baseUrlCdn}/js/sweetalert/sweetalert.js')
    script.
      document.querySelector('.sweet-5').onclick = function(){
        swal({
          title: "Are you sure?",
          text: "Are you sure to delete #{flow.name} ?<br /><small>This action will erase all the data from this Flow</small>.",
          html: true,
          type: "error",
          showCancelButton: true,
          confirmButtonClass: "btn-danger",
          confirmButtonText: "Yes, delete it!",
          cancelButtonText: "No, cancel",
          closeOnConfirm: false,
          closeOnCancel: true
        },
        function(isConfirm) {
          if (isConfirm) {
            document.location.href='/flows/#{flow.id}/remove';
          } else {
            //
          }
        });
      };
      
    link(href='#{baseUrlCdn}/css/bootstrap-colorpicker/bootstrap-colorpicker-2.3.3.min.css', rel='stylesheet')
    script(type='text/javascript', src='#{baseUrlCdn}/js/bootstrap-colorpicker/bootstrap-colorpicker-2.3.3.min.js')
    
    script(type='text/javascript').
      // Types:
      // datatype, unit, startdate, enddate, background, lineColor, fillColor, normalRangeColor
      var snippetsTypes = {
        "valuedisplay": {
          "parameters":[
            {"label":"Datatype", "id":"datatype", "type":"text", default:"float", placeholder:"Datatype", isMandatory: false},
            {"label":"Unit", "id":"unit", "type":"text", default:"°C", placeholder:"Unit", isMandatory: false},
            {"label":"Background Color", "id":"background", "type":"colorpicker", default:"", placeholder:"", isMandatory: false},
            {"label":"Line Color", "id":"lineColor", "type":"colorpicker", default:"", placeholder:"", isMandatory: false},
            {"label":"Fill Color", "id":"fillColor", "type":"colorpicker", default:"", placeholder:"", isMandatory: false},
            {"label":"Normal Range Color", "id":"normalRangeColor", "type":"colorpicker", default:"", placeholder:"", isMandatory: false},
          ]
        },
        "boolean": {
          "parameters":[
            {"label":"Background Color", "id":"background", "type":"colorpicker", default:"#5595c2", placeholder:"", isMandatory: false}
          ]
        },
        "flowgraph": {
          "parameters":[
            {"label":"Datatype", "id":"datatype", "type":"text", default:"float", placeholder:"Datatype", isMandatory: false},
            {"label":"Unit", "id":"unit", "type":"text", default:"°C", placeholder:"Unit", isMandatory: false},
            {"label":"Start date", "id": "startdate", "type":"text", default:"", placeholder:"", isMandatory: false},
            {"label":"End date", "id": "enddate", "type":"text", default:"", placeholder:"", isMandatory: false}
          ]
        },
        "weather": {
          "parameters":[]
        }
      };
      
      $(function () {
        $('.iconpicker li .form-group input').on('click', function(){
          var checkbox = $(this);
          if (checkbox.is(':checked')) {
            checkbox.addClass('active');
          } else {
            checkbox.removeClass('active');
          }
        });
        
        $('li.btn-radio a').click(function(e) {
          var type = $(this).attr("data-type");
          $('#type').val(type);
          if ( type && snippetsTypes[type] ) {
            var output = "";
            $.each((snippetsTypes[type]).parameters, function(i, parameter) {
              if ( parameter.type === "text" ) {
                output += "<div class='form-group'><label for='"+parameter.id+"' class='control-label'>"+parameter.label+":";
                if ( parameter.isMandatory === true ) {
                  output += "<span class='mandatory'>*</span>";
                }
                output += "</label><input name='p["+parameter.id+"]' placeholder='"+parameter.placeholder+"' id='"+parameter.id+"' value='"+parameter.default+"' class='form-control' type='text'></div>";
    
              } else if( parameter.type === "radio" ) {
                output += parameter.name+" RADIO "+parameter.default;
    
              } else if( parameter.type === "colorpicker" ) {
                output += "<div class='form-group'><label for='"+parameter.id+"' class='control-label'>"+parameter.label+":</label><div class='colorpicker input-group colorpicker-component colorpicker-element'><span class='input-group-addon'><i></i></span><input name='p["+parameter.id+"]' id='"+parameter.id+"' value='"+parameter.default+"' class='form-control' type='text'></div></div>";
    
              } else if( parameter.type === "select" ) {
                output += "";
    
              } else if( parameter.type === "multiselect" ) {
                output += "";
    
              } else {
                output += parameter.label+" "+parameter.default;
    
              }
            })
            $('#specific').html(output);
            $('.colorpicker').colorpicker();
          }
        });
      });