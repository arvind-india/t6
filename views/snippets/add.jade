doctype html
html(lang='en')
  include ../includes/head.jade
  body
    include ../includes/navbar.jade

    .-o-container-fluid
      .row.side-body
        .col-sm-12.hidden-xs
          h2.fa.fa-2x.fa-puzzle-piece &nbsp;Add a Snippet to your shelves

    .-o-container-fluid
      .row.side-body

        -if (message && message.type == 'danger' && message.value)
        .col-sm-12(class='alert alert-#{message.type}')#add
          div.sidebar-module-inset
            if (message && message.type && message.value)
              div.alert(class='alert-#{message.type}', role='alert') #{message.value}

            form(method="post", action="/snippets/add")
              input.hidden(type='hidden', name='type', id='type', value='')
              .form-group
                label.control-label(for="name") Snippet Name:
                  span.mandatory *
                input.form-control(type="text", name="name", placeholder="Snippet Name", id="name", value="")

              .form-group
                label.control-label(for="flows") Flows:
                span.input-group
                  span.input-group-addon
                    span.fa.fa-random
                  select.form-control(multiple, name="flows[]", id="flows")
                    - for(f in flows) {
                      - if( new_snippet.flows !== undefined )
                        option(value="#{flows[f].id}", selected=((new_snippet.flows).indexOf(flows[f].id) > -1 ? "selected" : undefined)) #{flows[f].name}
                      - else
                        option(value="#{flows[f].id}") #{flows[f].name}
                    - }

              .form-group
                label.control-label(for="Color") Text Color
                .colorpicker.input-group.colorpicker-component
                  span.input-group-addon
                    i
                  input.form-control(type='text', name='color', value='#000000')

              .form-group
                label.control-label(for="icon") Snippet Icon:
                .input-group
                  span.input-group-addon
                    i
                  input.form-control.icp.icp-auto(name='icon', id='icon', data-placement='bottomLeft', value='', type='text')

              .row.form-group
                label.control-label Select & Customize your Snippet
                ol.list-unstyled
                  li.col-sm-2.btn-radio
                    strong.fa.fa-puzzle-piece.center-text &nbsp;Value Display
                    a(href="#", data-toggle="modal", data-target="#editSnippet", data-type="valuedisplay")
                      img.img-responsive.img-thumbnail.img-radio(src='/img/snippet-valuedisplay.jpg', width='100', style='display:block;')
                      span.btn.btn-primary.center-block.fa.fa-check &nbsp;Select
                    
                  li.col-sm-2.btn-radio
                    strong.fa.fa-puzzle-piece.center-text &nbsp;Boolean value
                    a(href="#", data-toggle="modal", data-target="#editSnippet", data-type="boolean")
                      img.img-responsive.img-thumbnail.img-radio(src='/img/snippet-boolean.jpg', width='100', style='display:block;')
                      span.btn.btn-primary.center-block.fa.fa-check &nbsp;Select
                    
                  li.col-sm-2.btn-radio
                    strong.fa.fa-puzzle-piece.center-text &nbsp;Flow Graph
                    a(href="#", data-toggle="modal", data-target="#editSnippet", data-type="flowgraph")
                      img.img-responsive.img-thumbnail.img-radio(src='/img/snippet-flowgraph.jpg', width='100', style='display:block;')
                      span.btn.btn-primary.center-block.fa.fa-check &nbsp;Select
                    
                  li.col-sm-2.btn-radio
                    strong.fa.fa-puzzle-piece.center-text &nbsp;Weather
                    a(href="#", data-toggle="modal", data-target="#editSnippet", data-type="weather")
                      img.img-responsive.img-thumbnail.img-radio(src='/img/snippet-weather.jpg', width='100', style='display:block;')
                      span.btn.btn-primary.center-block.fa.fa-check &nbsp;Select
                
                  li.col-sm-2.btn-radio
                    strong.fa.fa-puzzle-piece.center-text &nbsp;Clock
                    a(href="#", data-toggle="modal", data-target="#editSnippet", data-type="clock")
                      img.img-responsive.img-thumbnail.img-radio(src='/img/snippet-clock.jpg', width='100', style='display:block;')
                      span.btn.btn-primary.center-block.fa.fa-check &nbsp;Select
                
                  li.col-sm-2.btn-radio
                    strong.fa.fa-puzzle-piece.center-text &nbsp;Sparkline
                    a(href="#", data-toggle="modal", data-target="#editSnippet", data-type="sparkline")
                      img.img-responsive.img-thumbnail.img-radio(src='/img/snippet-sparkline.jpg', width='100', style='display:block;')
                      span.btn.btn-primary.center-block.fa.fa-check &nbsp;Select
                
                  li.col-sm-2.btn-radio
                    strong.fa.fa-puzzle-piece.center-text &nbsp;Simple Row
                    a(href="#", data-toggle="modal", data-target="#editSnippet", data-type="simplerow")
                      img.img-responsive.img-thumbnail.img-radio(src='/img/snippet-simplerow.jpg', width='100', style='display:block;')
                      span.btn.btn-primary.center-block.fa.fa-check &nbsp;Select
                
              .form-group#specific

              .form-group
                button.btn.btn-primary.m-t.pull-right(type='submit')
                  span.fa.fa-plus  Save Snippet
              
            p &nbsp;

    include ../includes/foot.jade

    link(href='/css/bootstrap-colorpicker/bootstrap-colorpicker-2.3.3.min.css', rel='stylesheet')
    link(href='/css/fontawesome-iconpicker/fontawesome-iconpicker.min.css', rel='stylesheet')
    script(type='text/javascript', src='/js/bootstrap-colorpicker/bootstrap-colorpicker-2.3.3.min.js')
    script(type='text/javascript', src='/js/fontawesome-iconpicker/fontawesome-iconpicker.js')

    script(type='text/javascript').
      $('.icp-auto').iconpicker({
        fullClassFormatter: function(val){
          if(val.match(/^fa-/)){ return 'fa '+val; }
          else{ return 'glyphicon '+val; }
        },
        hideOnSelect: true,
        icons: $.merge([//41 New Icons in 4.7
        'fa-address-book',
        'fa-address-book-o',
        'fa-address-card',
        'fa-address-card-o',
        'fa-bandcamp',
        'fa-bath',
        'fa-bathtub',
        'fa-drivers-license',
        'fa-drivers-license-o',
        'fa-eercast',
        'fa-envelope-open',
        'fa-envelope-open-o',
        'fa-etsy',
        'fa-free-code-camp',
        'fa-grav',
        'fa-handshake-o',
        'fa-id-badge',
        'fa-id-card',
        'fa-id-card-o',
        'fa-imdb',
        'fa-linode',
        'fa-meetup',
        'fa-microchip',
        'fa-podcast',
        'fa-quora',
        'fa-ravelry',
        'fa-s15',
        'fa-shower',
        'fa-snowflake-o',
        'fa-superpowers',
        'fa-telegram',
        'fa-thermometer',
        'fa-thermometer-0',
        'fa-thermometer-1',
        'fa-thermometer-2',
        'fa-thermometer-3',
        'fa-thermometer-4',
        'fa-thermometer-empty',
        'fa-thermometer-full',
        'fa-thermometer-half',
        'fa-thermometer-quarter',
        'fa-thermometer-three-quarters',
        'fa-times-rectangle',
        'fa-times-rectangle-o',
        'fa-user-circle',
        'fa-user-circle-o',
        'fa-user-o',
        'fa-vcard-o',
        'fa-window-close',
        'fa-window-close-o',
        'fa-window-maximize',
        'fa-window-minimize',
        'fa-window-restore',
        'fa-wpexplorer'],
        $.iconpicker.defaultOptions.icons),
      });
      // Types:
      // datatype, unit, startdate, enddate, background, lineColor, fillColor, normalRangeColor
      var snippetsTypes = {
        "valuedisplay": {
          "parameters":[
            {"label":"Datatype", "id":"datatype", "type":"text", default:"float", placeholder:"Datatype", isMandatory: false},
            {"label":"Unit", "id":"unit", "type":"text", default:"°C", placeholder:"Unit", isMandatory: false},
            {"label":"Background Color", "id":"background", "type":"colorpicker", default:"#000", placeholder:"", isMandatory: false},
            {"label":"Line Color", "id":"lineColor", "type":"colorpicker", default:"#000", placeholder:"", isMandatory: false},
            {"label":"Fill Color", "id":"fillColor", "type":"colorpicker", default:"#000", placeholder:"", isMandatory: false},
            {"label":"Normal Range Color", "id":"normalRangeColor", "type":"colorpicker", default:"#000", placeholder:"", isMandatory: false},
          ]
        },
        "boolean": {
          "parameters":[
            {"label":"Background Color", "id":"background", "type":"colorpicker", default:"#5595c2", placeholder:"", isMandatory: false}
          ]
        },
        "flowgraph": {
          "parameters":[
            {"label":"Datatype", "id":"datatype", "type":"text", default:"float", placeholder:"Datatype", isMandatory: false},
            {"label":"Unit", "id":"unit", "type":"text", default:"°C", placeholder:"Unit", isMandatory: false},
            {"label":"Start date", "id": "startdate", "type":"text", default:"", placeholder:"", isMandatory: false},
            {"label":"End date", "id": "enddate", "type":"text", default:"", placeholder:"", isMandatory: false}
          ]
        },
        "weather": {
          "parameters":[]
        },
        "clock": {
          "parameters":[
            {"label":"Background Color", "id":"background", "type":"colorpicker", default:"#000", placeholder:"", isMandatory: false},
          ]
        },
        "sparkline": {
          "parameters":[
            {"label":"Background Color", "id":"background", "type":"colorpicker", default:"#000", placeholder:"", isMandatory: false},
          ]
        },
        "simplerow": {
          "parameters":[
            {"label":"Background Color", "id":"background", "type":"colorpicker", default:"#000", placeholder:"", isMandatory: false},
          ]
        }
      };
      
      $(function () {
        $('.iconpicker li .form-group input').on('click', function(){
          var checkbox = $(this);
          if (checkbox.is(':checked')) {
            checkbox.addClass('active');
          } else {
            checkbox.removeClass('active');
          }
        });
        
        $('li.btn-radio a').click(function(e) {
          var type = $(this).attr("data-type");
          $('#type').val(type);
          if ( type && snippetsTypes[type] ) {
            var output = "";
            $.each((snippetsTypes[type]).parameters, function(i, parameter) {
              if ( parameter.type === "text" ) {
                output += "<div class='form-group'><label for='"+parameter.id+"' class='control-label'>"+parameter.label+":";
                if ( parameter.isMandatory === true ) {
                  output += "<span class='mandatory'>*</span>";
                }
                output += "</label><input name='p["+parameter.id+"]' placeholder='"+parameter.placeholder+"' id='"+parameter.id+"' value='"+parameter.default+"' class='form-control' type='text'></div>";

              } else if( parameter.type === "radio" ) {
                output += parameter.name+" RADIO "+parameter.default;

              } else if( parameter.type === "colorpicker" ) {
                output += "<div class='form-group'><label for='"+parameter.id+"' class='control-label'>"+parameter.label+":</label><div class='colorpicker input-group colorpicker-component colorpicker-element'><span class='input-group-addon'><i></i></span><input name='p["+parameter.id+"]' id='"+parameter.id+"' value='"+parameter.default+"' class='form-control' type='text'></div></div>";

              } else if( parameter.type === "select" ) {
                output += "";

              } else if( parameter.type === "multiselect" ) {
                output += "";

              } else {
                output += parameter.label+" "+parameter.default;

              }
            })
            $('#specific').html(output);
            $('.colorpicker').colorpicker();
          }
        });
      });