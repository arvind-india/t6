doctype html
html(lang='en')
  - title='API for developers'
  include ../includes/head.jade
  body
    include ../includes/navbar-on-top.jade
    
    .container.starter-template
      .row
        .col-sm-12
          h2.fa.fa-2x.fa-wrench &nbsp;t6, Install your own server
          p t6 is Open-Source and can be installed on your own server from the  
            a(href='https://github.com/mathcoll/t6') github repository
            | .
            | And if you don't care about installing the application yourself, feel free to 
            a(href='/account/register') create your account
            |  on this server.

        .col-sm-12
          p Following prerequisites are required to run t6 on your server:
          pre.language-markup Install node (if needed): https://nodejs.org/en/
            |Install npm (if needed): https://github.com/npm/npm
          p Then you should get the latest release from the github repository:
          pre.language-markup git clone https://github.com/mathcoll/t6.git ./t6 & cd ./t6
          p Once cloning is done, you can proceed to depedencies installation using npm command-line:
          pre.language-markup npm install
          p Final step is to customize you installation by adjusting settings from the default templates files:
          p You can use the Linux command-line (`uname -n`) to get your machine hostname.
          pre.language-markup rename "settings-default_hostname.js" according to your server hostname and edit the file.
            | rename "rules-default_hostname.js" according to your server hostname.
            | rename "quota-default_hostname.js" according to your server hostname.
            | rename "db-default_hostname.json" according to your server hostname.
          p Optionally, you can add the service at boot time (tested with Ubuntu and Debian):
            ul
              li First: install the server in services:
                pre.language-markup sudo ln -s /var/www/t6/etc/init.d/t6 /etc/init.d/t6
              li Then set the server to run at start:
                pre.language-markup sudo update-rc.d t6 defaults
              
    .container.starter-template
      .row
        .col-sm-8
          h2.fa.fa-2x.fa-wrench &nbsp;Getting Started
          p t6 API is based on top of 
            a(href='//en.wikipedia.org/wiki/Representational_state_transfer') REST
            |  architecture.
          p The current public version of the Api is: v#{version}; this version number is required for calling the Api endpoints.
          p t6 is handling SSL/TLS, meaning the Api should be called from https protocol when feasible. 
           
          h3 API endpoints
          ul
            li 
              a(href='#Status') I. Status
            li 
              a(href='#Users') II. Users
            li 
              a(href='#Objects') III. Objects
            li 
              a(href='#Flows') IV. Flows
            li 
              a(href='#Data') V. Data
            li 
              a(href='#Units') VI. Units
            li 
              a(href='#Datatypes') VII. Datatypes

        .col-sm-4
          p 
              
    .container.starter-template
      .row
        .col-sm-12
          h3
            a(name='Status') I. Api Status
        
        .col-sm-12
          ul#tabs.nav.nav-tabs(data-tabs='tabs')
            li.active
              a(href='#curl0', data-toggle='tab') Curl
            li
              a(href='#nodejs0', data-toggle='tab') Node.js

          #my-tab-content.tab-content
            #curl0.tab-pane.active
              p
                span.label.label-success GET
                |  Get Api Status:
              pre.language-markup curl -i \
                | -H "Accept: application/json" \
                | -H "Content-Type:application/json" \
                | -X GET #{baseUrl}/v#{version}/status \
              hr/

            #nodejs0.tab-pane
              p
                span.label.label-success GET
                |  Get Api Status:
              pre.language-javascript 
          
              
    .container.starter-template
      .row
        .col-sm-12
          h3
            a(name='Users') II. Users and Permissions
        
        .col-sm-12
          ul#tabs.nav.nav-tabs(data-tabs='tabs')
            li.active
              a(href='#curl1', data-toggle='tab') Curl
            li
              a(href='#nodejs1', data-toggle='tab') Node.js

          #my-tab-content.tab-content
            #curl1.tab-pane.active
              p
                span.label.label-success GET
                |  Get self details current User:
              pre.language-markup curl -i \
                | -H "Accept: application/json" \
                | -H "Content-Type:application/json" \
                | -X GET #{baseUrl}/v#{version}/users/me/token \
              hr/
              
              p  Refresh token from current User:
              pre.language-markup 
              hr/
              
              p
                span.label.label-warning POST
                |  Create a User to platform:
              pre.language-markup curl -i \
                | -H "Accept: application/json" \
                | -H "Content-Type:application/json" \
                | -X POST #{baseUrl}/v#{version}/users/ \
                | --data '{"firstName": "My FirstName", "lastName": "My LastName", "email": "myemail@domain.tld"}'
              
              span Response:
              pre.language-markup HTTP/1.1 201 Created
                | {"code":201,"message":"Created","user":{"links":{"parent":"#{baseUrl}/v2.0.1/users"},"data":{"type":"users","id":"98e2f250-c6d9-4cfd-97ae-8d7142bd6f97","attributes":{"first_name":"My FirstName","last_name":"My LastName","email":"myemail@domain.tld","subscription_date":"1479839898260"},"links":{"self":"#{baseUrl}/v2.0.1/users/98e2f250-c6d9-4cfd-97ae-8d7142bd6f97"}}},"token":{"user_id":"98e2f250-c6d9-4cfd-97ae-8d7142bd6f97","key":"rvdagYpPNPiarzBzsFoovqBwrNKkLntERFyqeYFnKxdskhQAYxJPuhMMSOIqAS.k","secret":"tOMACwIBJCnmYqIFFu.yreBGBRSVEGVRFWzMRebUBMbxgwttsclIHZSrO.CBXZwK","expiration":"","meta":{"revision":0,"created":1479839898260,"version":0},"$loki":25}}
              hr/
              
              p
                span.label.label-primary PUT
                |  Update a User to platform:
              pre.language-markup curl -i \
                | -H 'Authorization: Bearer :bearer'
                | -H "Accept: application/json" \
                | -H "Content-Type:application/json" \
                | -X POST #{baseUrl}/v#{version}/users/ \
                | --data '{"firstName": "My updated FirstName", "lastName": "My updated LastName", "email": "myNewEmail@domain.tld"}'
              
              span Response:
              pre.language-markup HTTP/1.1 200 Successfully updated
                | {"code":200,"message":"Successfully updated"}
              hr/
              
              p
                span.label.label-danger DELETE
                |  Delete a User from platform:
              pre.language-markup 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p  Create the initial token (without any permission) so that we can then create a Flow:
              pre.language-markup curl -i \
                | -H "Accept: application/json" \
                | -H "Content-Type:application/json" \
                | -X POST #{baseUrl}/v#{version}/users/me/token \
                | --data '{"key": ":key", "secret": ":secret"}'
              
              span Response:
              pre.language-markup {}
              hr/
              
            #nodejs1.tab-pane
              p
                span.label.label-success GET
                |  Get self details current User:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p Refresh token from current User:
              pre.language-javascript 
              hr/
              
              p
                span.label.label-warning POST
                |  Create a User to platform:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-primary PUT
                |  Update a User to platform:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-danger DELETE
                |  Delete a User from platform:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/

        .col-sm-12
          h3
            a(name='Objects') III. Objects
        
        .col-sm-12
          ul#tabs.nav.nav-tabs(data-tabs='tabs')
            li.active
              a(href='#curl2', data-toggle='tab') Curl
            li
              a(href='#nodejs2', data-toggle='tab') Node.js

          #my-tab-content.tab-content
            #curl2.tab-pane.active
              p
                span.label.label-success GET
                |  Get the list of Objects from the current User:
              pre.language-markup curl -X GET '#{baseUrl}/v#{version}/objects/'
                | -H 'Authorization: Bearer :bearer'
                | -H "Accept: application/json"
                | -H "Content-Type: application/json"
                | -H 'Connection: keep-alive'
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-success GET
                |  Get details on the selected Object:
              pre.language-markup curl -X GET '#{baseUrl}/v#{version}/objects/:object_id'
                | -H 'Authorization: Bearer :bearer'
                | -H "Accept: application/json"
                | -H "Content-Type: application/json"
                | -H 'Connection: keep-alive'
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-warning POST
                |  Create a new Object to current User:
              pre.language-markup  curl -X POST '#{baseUrl}/v#{version}/objects'
                | --data '{}'
                | -H 'Authorization: Bearer :bearer'
                | -H "Accept: application/json"
                | -H "Content-Type: application/json"
                | -H 'Connection: keep-alive'
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-primary PUT
                |  Update an Object:
              pre.language-markup  curl -X PUT '#{baseUrl}/v#{version}/objects/:object_id'
                | --data '{}' -H 'Authorization: Bearer :bearer'
                | -H "Accept: application/json"
                | -H "Content-Type: application/json"
                | -H 'Connection: keep-alive'
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-danger DELETE
                |  Delete an Object:
              pre.language-markup  curl -X DELETE '#{baseUrl}/v#{version}/objects/:object_id'
                | -H 'Authorization: Bearer :bearer'
                | -H "Accept: application/json"
                | -H "Content-Type: application/json"
                | -H 'Connection: keep-alive'
              
              span Response:
              pre.language-markup {}
              hr/
              
            #nodejs2.tab-pane
              p
                span.label.label-success GET
                |  Get the list of Objects from the current User:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-success GET
                |  Get details on the selected Object:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-warning POST
                |  Create a new Object to current User:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-primary PUT
                |  Update an Object:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-danger DELETE
                |  Delete an Object:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/

        .col-sm-12
          h3
            a(name='Flows') IV. Flows
        
        .col-sm-12
          ul#tabs.nav.nav-tabs(data-tabs='tabs')
            li.active
              a(href='#curl3', data-toggle='tab') Curl
            li
              a(href='#nodejs3', data-toggle='tab') Node.js

          #my-tab-content.tab-content
            #curl3.tab-pane.active
              p
                span.label.label-success GET
                |  Get the list of Flows from the current User:
              pre.language-markup curl -X GET '#{baseUrl}/v#{version}/flows/'
                | -H 'Authorization: Bearer :bearer'
                | -H "Accept: application/json"
                | -H "Content-Type: application/json"
                | -H 'Connection: keep-alive'
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-success GET
                |  Get details on the selected Flow:
              pre.language-markup curl -X GET '#{baseUrl}/v#{version}/flows/:flow_id'
                | -H 'Authorization: Bearer :bearer'
                | -H "Accept: application/json"
                | -H "Content-Type: application/json"
                | -H 'Connection: keep-alive'
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-warning POST
                |  Create a new Flow and get 'rw' permissions:
              pre.language-markup  curl -X POST '#{baseUrl}/v#{version}/flows'
                | --data '{}'
                | -H 'Authorization: Bearer :bearer'
                | -H "Accept: application/json"
                | -H "Content-Type: application/json"
                | -H 'Connection: keep-alive'
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-primary PUT
                |  Update a Flow:
              pre.language-markup  curl -X PUT '#{baseUrl}/v#{version}/flows/:flow_id'
                | --data '{}'
                | -H 'Authorization: Bearer :bearer'
                | -H "Accept: application/json"
                | -H "Content-Type: application/json"
                | -H 'Connection: keep-alive'
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-danger DELETE
                |  Delete a Flow:
              pre.language-markup  curl -X DELETE '#{baseUrl}/v#{version}/flows/:flow_id'
                | -H 'Authorization: Bearer :bearer'
                | -H "Accept: application/json"
                | -H "Content-Type: application/json"
                | -H 'Connection: keep-alive'
              
              span Response:
              pre.language-markup {}
              hr/
              
            #nodejs3.tab-pane
              p
                span.label.label-success GET
                |  Get the list of Flows from the current User:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-success GET
                |  Get details on the selected Flow:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-warning POST
                |  Create a new Flow and get 'rw' permissions:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-primary PUT
                |  Update a Flow:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-danger DELETE
                |  Delete a Flow:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/

        .col-sm-12
          h3
            a(name='Data') V. Data
        
        .col-sm-12
          ul#tabs.nav.nav-tabs(data-tabs='tabs')
            li.active
              a(href='#curl4', data-toggle='tab') Curl
            li
              a(href='#nodejs4', data-toggle='tab') Node.js

          #my-tab-content.tab-content
            #curl4.tab-pane.active
              p
                span.label.label-success GET
                |  Get data from a Flows where the current User is authorized ('rw' or 'r'):
              pre.language-markup 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-success GET
                |  Get 1 specific data from a Flows where the current User is authorized ('rw' or 'r'):
              pre.language-markup 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-warning POST
                |  Create a data to a Flows (User must have 'rw' permission):
              pre.language-markup 
              
              span Response:
              pre.language-markup {}
              hr/
              
            #nodejs4.tab-pane
              p
                span.label.label-success GET
                |  Get data from a Flows where the current User is authorized ('rw' or 'r'):
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-success GET
                |  Get 1 specific data from a Flows where the current User is authorized ('rw' or 'r'):
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-warning POST
                |  Create a data to a Flows (User must have 'rw' permission):
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/

        .col-sm-12
          h3
            a(name='Units') VI. Units
        
        .col-sm-12
          ul#tabs.nav.nav-tabs(data-tabs='tabs')
            li.active
              a(href='#curl5', data-toggle='tab') Curl
            li
              a(href='#nodejs5', data-toggle='tab') Node.js

          #my-tab-content.tab-content
            #curl5.tab-pane.active
              p
                span.label.label-success GET
                |  Get the Units list set on the t6 platform:
              pre.language-markup 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-success GET
                |  Get a specific Units details:
              pre.language-markup 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-warning POST
                |  Create a Unit to platform, require Admin permissions:
              pre.language-markup 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-primary PUT
                |  Update a Unit to platform, require Admin permissions:
              pre.language-markup 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-danger DELETE
                |  Delete a Unit from platform, require Admin permissions:
              pre.language-markup 
              
              span Response:
              pre.language-markup {}
              hr/
              
            #nodejs5.tab-pane
              p
                span.label.label-success GET
                |  Get the Units list set on the t6 platform:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-success GET
                |  Get a specific Units details:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-warning POST
                |  Create a Unit to platform, require Admin permissions:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-primary PUT
                |  Update a Unit to platform, require Admin permissions:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-danger DELETE
                |  Delete a Unit from platform, require Admin permissions:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
          
        .col-sm-12
          h3
            a(name='Datatypes') VII. Datatypes
        
        .col-sm-12
          ul#tabs.nav.nav-tabs(data-tabs='tabs')
            li.active
              a(href='#curl6', data-toggle='tab') Curl
            li
              a(href='#nodejs6', data-toggle='tab') Node.js

          #my-tab-content.tab-content
            #curl6.tab-pane.active
              p
                span.label.label-success GET
                | Get the Datatype list set on the t6 platform:
              pre.language-markup 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-success GET
                | Get a specific Datatype details:
              pre.language-markup 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-warning POST
                | Create a Datatype to platform, require Admin permissions:
              pre.language-markup 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-primary PUT
                | Update a Datatype to platform, require Admin permissions:
              pre.language-markup 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-danger DELETE
                | Delete a Datatype from platform, require Admin permissions:
              pre.language-markup 
              
              span Response:
              pre.language-markup {}
              hr/
              
            #nodejs6.tab-pane
              p
                span.label.label-success GET
                | Get the Datatype list set on the t6 platform:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-success GET
                | Get a specific Datatype details:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-warning POST
                | Create a Datatype to platform, require Admin permissions:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-primary PUT
                | Update a Datatype to platform, require Admin permissions:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/
              
              p
                span.label.label-danger DELETE
                | Delete a Datatype from platform, require Admin permissions:
              pre.language-javascript 
              
              span Response:
              pre.language-markup {}
              hr/

    include ../includes/foot.jade
    link(href='#{baseUrlCdn}/css/prismjs/prismjs.min.css', rel='stylesheet')
    script(src='#{baseUrlCdn}/js/prismjs/prismjs.min.js')
    