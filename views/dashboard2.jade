doctype html
html(lang='en')
  include ./includes/head.jade
  body
    include ./includes/navbar.jade

    .container
      .starter-template
        h2 Dashboard
        .col-sm-6
          .panel.panel-default
            .panel-heading
               h3.panel-title
                 span.glyphicon.glyphicon-scale
                 | &nbsp;Indoor Temperature & Humidity (dht11)
            .panel-body
               #graph1.col-xs-12(style='height:300px;')
            .panel-footer 

        .col-sm-6
          .panel.panel-default
            .panel-heading
               h3.panel-title
                 span.glyphicon.glyphicon-scale
                 | &nbsp;VOC (Yoctopuce)
            .panel-body
               #graph2.col-xs-12(style='height:300px;')
            .panel-footer 

      .starter-template
        .col-sm-6
          .panel.panel-default
            .panel-heading
               h3.panel-title
                 span.glyphicon.glyphicon-scale
                 | &nbsp;Failed Root Login
            .panel-body
               #graph3.col-xs-12(style='height:300px;')
            .panel-footer 

        .col-sm-6
          .panel.panel-info
            .panel-heading
               h3.panel-title
                 span.glyphicon.glyphicon-scale
                 | &nbsp;Free space left
            .panel-body
               #graph4.col-xs-12(style='height:300px;')
            .panel-footer 

      .starter-template
        .col-sm-6
          .panel.panel-info
            .panel-heading
               h3.panel-title
                 span.glyphicon.glyphicon-scale
                 | &nbsp;Memory usage
            .panel-body
               #graph5.col-xs-12(style='height:300px;')
            .panel-footer 

        .col-sm-6
          .panel.panel-info
            .panel-heading
               h3.panel-title
                 span.glyphicon.glyphicon-scale
                 | &nbsp;CPU usage
            .panel-body
               #graph6.col-xs-12(style='height:300px;')
            .panel-footer 

    include ./includes/foot.jade
    #tooltip(style='position: absolute; border: 1px solid rgb(255, 221, 221); padding: 2px; background-color: rgb(255, 238, 238); opacity: 0.8;display: none;')
    

    script(type='text/javascript', src='/js/chartjs/chart.min.js')
    script(type='text/javascript', src='/js/sparkline/jquery.sparkline.min.js')
    script(type='text/javascript', src='/js/flot/jquery.flot.js')
    script(type='text/javascript', src='/js/flot/jquery.flot.pie.js')
    script(type='text/javascript', src='/js/flot/jquery.flot.orderBars.js')
    script(type='text/javascript', src='/js/flot/jquery.flot.time.min.js')
    script(type='text/javascript', src='/js/flot/date.js')
    script(type='text/javascript', src='/js/flot/jquery.flot.spline.js')
    script(type='text/javascript', src='/js/flot/jquery.flot.stack.js')
    script(type='text/javascript', src='/js/flot/curvedLines.js')
    script(type='text/javascript', src='/js/flot/jquery.flot.resize.js')
    script(type='text/javascript', src='/js/flot/jquery.flot.threshold.js')
    script.script.
      var d = new Array();
      var data = new Array();
      var flows = new Array(
      // flow_id, callback, container, limit, page , sort
      ["1", doGraph, "graph3", 50, 1, 'desc'],
      ["2", doGraph, "graph4", 50, 1, 'desc'],
      ["4", doGraph, "graph5", 10, 1, 'desc'],
      ["5", doGraph, "graph2", 50, 1, 'desc'],
      ["24", doGraph, "graph6", 50, 1, 'desc'],
      ["19fc7ca5-a4f1-4af3-91c9-2426bd1a3f0f", doGraph2, "graph1", 50, 1, 'desc'],
      ["6d844fbf-29c0-4a41-8c6a-0e9f3336cea3", doGraph2, "graph1", 50, 1, 'desc']
      );  
        
      flows.map(function(f) {
      var flow_id = f[0];
      var callback = f[1];
      var container = f[2];
      var limit = f[3];
      var page = f[4];
      var sort = f[5];
      return getData(location.protocol+'//'+location.hostname+(location.port ? ':'+location.port: '')+'/v#{version}/data/', flow_id, 'GET', 'application/json', callback, container, limit, page , sort);
      });
      
      function getData(base, flow_id, type, CType, callback, container, limit, page, sort) {
      $.ajax({
      url: base+flow_id,
      type: type,
      data:{limit: limit, page: page , sort: sort},
      success: function(d){
      data[flow_id] = (d.data).map(function(i) {
      return [parseInt(i.attributes.timestamp),
      parseInt(i.attributes.value)]
      });
      var lastValue = ((d.data)[0].attributes.timestamp);
      var title = d.links.title;
      var unit = d.links.unit;
      callback(data[flow_id], container, flow_id, lastValue, title, unit);
      },
      error: function(d) {
      console.log('ERROR '+base);
      console.log(d);
      }
      });
      }
      
      function doGraph(data, container, flow_id, lastValue, title, unit) {
      var date = new Date(lastValue);
      lastValue = date.getDate()+'/'+(date.getMonth()+1)+'/'+date.getFullYear()+' '+date.getHours()+':'+date.getMinutes();
      $.plot($('#'+container), [data], options);
      $('#'+container).parent().parent().find('div.panel-footer').text('Last value at '+lastValue);
      $('#'+container).parent().parent().parent().find('div.panel-heading h3.panel-title').html('<span class="glyphicon glyphicon-scale"></span>'+title);
      $('#'+container).bind("plothover", function (event, pos, item) {
      if (item) {
      var xdate = new Date((item.datapoint[0]).toFixed(0)/1);
      date = xdate.getDate()+'/'+(xdate.getMonth()+1)+'/'+xdate.getFullYear()+' '+xdate.getHours()+':'+xdate.getMinutes();
      y = date+'<br /><b>'+item.datapoint[1].toFixed(2)+unit+'</b>';
      $("#tooltip").html(y)
      .css({top: item.pageY+15, left: item.pageX+15}).show();
      } else {
      $("#tooltip").hide();
      }
      });
      };
      
      function doGraph2(data, container, flow_id, lastValue, title, unit) {
      d.push({
      data : data,
      label : 'aaaa', // TODO - Humidity Indoor / 
      name : 'bbbb', // TODO - Humidity Indoor / 
      unit : '%', // TODO
      lines : {
      show : true,
      fill : false,
      lineWidth : 2,
      steps : false
      },
      points : {
      show : true
      },
      yaxis : 1,
      threshold : [{
      //	below : 50,
      //	color : 'rgb(200, 20, 30)'
      }, {
      //	below : 3,
      //	color : 'rgb(175, 216, 248)'
      }],
      });

      if (d.length == 2) {
      var date = new Date(lastValue);
      lastValue = date.getDate()+'/'+(date.getMonth()+1)+'/'+date.getFullYear()+' '+date.getHours()+':'+date.getMinutes();
      $.plot($('#'+container), d, options);
      $('#'+container).parent().parent().find('div.panel-footer').text('Last value at '+lastValue);
      $('#'+container).bind("plothover", function (event, pos, item) {
      if (item) {
      var xdate = new Date((item.datapoint[0]).toFixed(0)/1);
      date = xdate.getDate()+'/'+(xdate.getMonth()+1)+'/'+xdate.getFullYear()+' '+xdate.getHours()+':'+xdate.getMinutes();
      y = date+'<br /><b>'+item.datapoint[1].toFixed(2)+unit+'</b>';
      $("#tooltip").html(y)
      .css({top: item.pageY+15, left: item.pageX+15}).show();
      } else {
      $("#tooltip").hide();
      }
      });
      }
      };

      function weekendAreas(axes) {
      var markings = [];
      var d = new Date(axes.xaxis.min);
      // go to the first Saturday
      d.setUTCDate(d.getUTCDate() - ((d.getUTCDay() + 1) % 7))
      d.setUTCSeconds(0);
      d.setUTCMinutes(0);
      d.setUTCHours(0);
      var i = d.getTime();
      do {
      // when we don't set yaxis, the rectangle automatically
      // extends to infinity upwards and downwards
      markings.push({ xaxis: { from: i, to: i + 2 * 24 * 60 * 60 * 1000 } });
      i += 7 * 24 * 60 * 60 * 1000;
      } while (i < axes.xaxis.max);
      return markings;
      }
      var options = {
      grid: {
      borderWidth: {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
      },
      borderColor: {
      top: "#7F8790",
      right: "#7F8790",
      bottom: "#7F8790",
      left: "#7F8790"
      },
      markings: weekendAreas,
      clickable: true,
      hoverable: true,
      autoHighlight: true,
      mouseActiveRadius: 10
      },
      xaxis: { mode: "time", autoscale: true, timeformat: "%d/%m/%Y<br/>%Hh%M" },
      yaxis: [ { autoscale: true, position: null }, { autoscale: true, position: 1 } ],
      };
   