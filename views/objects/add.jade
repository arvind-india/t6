doctype html
html(lang='en')
  include ../includes/head.jade
  body
    include ../includes/navbar.jade

    .container-fluid
      .row.side-body
        .col-sm-12.hidden-xs
          h2.fa.fa-2x.fa-cube &nbsp;Add Object to your shelves

        -if (message && message.type == 'danger' && message.value)
        .col-sm-12(class='alert alert-#{message.type}')#add
          div.sidebar-module-inset
            if (message && message.type && message.value)
              div.alert(class='alert-#{message.type}', role='alert') #{message.value}

            form(action="/objects/add#add", method="post")
              .form-group
                label.control-label(for="name") Object Name:
                  span.mandatory *
                span.input-group
                  span.input-group-addon
                    span.fa.fa-cubes
                  input.form-control(type="text", name="name", placeholder="Object Name", id="name", value=new_object.name)

              .form-group
                label.control-label(for="Type") Type:
                  span.mandatory *
                span.input-group
                  span.input-group-addon
                    span.fa.fa-microchip
                  select.form-control(type="text", name="type", id="type")
                    option(value='') Please select a type
                    - for(type in types) {
                      if (new_object.type == types[type])
                        option(value='#{types[type]}' selected) #{types[type]}
                      else
                        option(value='#{types[type]}') #{types[type]}
                    - }

              .form-group
                label.control-label(for="Position") Position/Location:
                span.input-group
                  span.input-group-addon
                    span.fa.fa-map-marker
                  input.form-control(type="text", name="position", placeholder="Object position (living, dressing, etc)", id="Position", value=new_object.position)

              .form-group
                label.control-label(for="Longitude") Longitude:
                span.input-group
                  span.input-group-addon
                    span.fa.fa-map
                  input.form-control(type="text", name="longitude", placeholder="Longitude", id="Longitude", value=new_object.longitude)

              .form-group
                label.control-label(for="Latitude") Latitude:
                span.input-group
                  span.input-group-addon
                    span.fa.fa-map
                  input.form-control(type="text", name="latitude", placeholder="Latitude", id="Latitude", value=new_object.latitude)

              .form-group
                label.control-label(for="ipv6") Map:
                #osm(style='height:350px;width:100%')

              .form-group
                label.control-label(for="Ipv4") Ip v4:
                span.input-group
                  span.input-group-addon
                    span IP
                  input.form-control(type="text", name="ipv4", placeholder="Ip v4: 192.168.0.1", id="Ipv4", value=new_object.ipv4)
              
              .form-group
                label.control-label(for="Ipv6") Ip v6:
                span.input-group
                  span.input-group-addon
                    span IP
                  input.form-control(type="text", name="ipv6", placeholder="Ip v6", id="Ipv6", value=new_object.ipv6)

              .form-group
                label.control-label(for="Description") Description:
                span.input-group
                  span.input-group-addon
                    span.fa.fa-pencil-square-o
                  textarea.form-control.vresize(name="description", placeholder="Object description", id="Description")= new_object.description

              .form-group
                label.control-label Public Visibility:
                br/
                input(type='radio', name='isPublic', value='true', id='isPublic', checked=(new_object.isPublic=='true' ? "checked" : undefined))
                label.control-label(for="isPublic") &nbsp;Yes
                | &nbsp;&nbsp;
                input(type='radio', name='isPublic', value='false', id='isNotPublic', checked=(new_object.isPublic=='false' ? "checked" : undefined))
                label.control-label(for="isNotPublic") &nbsp;No

              
              .form-group
                hr/
                h3 Custom Parameters
                .table-header
                  span.input-group
                    strong Type
                  span.input-group
                    strong Name
                  span.input-group
                    strong Value
                  span.input-group
                    strong 

                ul.customParameter.list-unstyled

                button.input-group.btn.btn-success(type="button")
                  span.fa.fa-plus
                
              .form-group
                button.btn.btn-primary.m-t.pull-right
                  span.fa.fa-plus  Add Object
              
              p &nbsp;

    include ../includes/foot.jade
  - if ( !new_object.longitude ) {
    - new_object.longitude = 0
  - }
  - if ( !new_object.latitude ) {
    - new_object.latitude = 0
  - }
  script(type='text/javascript', src='//www.openlayers.org/api/OpenLayers.js')
  script(type='text/javascript').
    var marker;
    var map;
    
    OpenLayers.Control.Click = OpenLayers.Class(OpenLayers.Control, { 
      defaultHandlerOptions: {
        'single': true,
        'double': false,
        'pixelTolerance': 0,
        'stopSingle': false,
        'stopDouble': false
      },
      initialize: function(options) {
        this.handlerOptions = OpenLayers.Util.extend(
          {}, this.defaultHandlerOptions
        );
        OpenLayers.Control.prototype.initialize.apply(
          this, arguments
        ); 
        this.handler = new OpenLayers.Handler.Click(
          this, {
            'click': this.trigger
          }, this.handlerOptions
        );
      }, 
      trigger: function(e) {
        var pixel = map.getLonLatFromViewPortPx(e.xy);
        target = pixel.transform(
          new OpenLayers.Projection("EPSG:900913"), 
          new OpenLayers.Projection("EPSG:4326")
        );
        //marker.moveTo( target );
        $('#Longitude').val(Math.round(target.lon*100000)/100000);
        $('#Latitude').val(Math.round(target.lat*100000)/100000);
      }
    });
    
    $(document).ready(function() {
      map = new OpenLayers.Map("osm");
      layer = new OpenLayers.Layer.OSM();
      map.addLayer(layer);
      var lonLat = new OpenLayers.LonLat( #{new_object.longitude}, #{new_object.latitude} )
      .transform(
        new OpenLayers.Projection("EPSG:4326"), // transform from WGS 1984
          map.getProjectionObject() // to Spherical Mercator Projection
      );
      var markers = new OpenLayers.Layer.Markers( "Markers" );
      map.addLayer(markers);
      marker = new OpenLayers.Marker(lonLat);
      //marker.icon.url = '';
      markers.addMarker(marker);
      map.setCenter (lonLat, 18);
      var click = new OpenLayers.Control.Click();
      map.addControl(click);
      click.activate();
    
      $(".customParameter li button.btn-danger").click(function() {
        var id = $(this).data('id');
        $("#"+id).remove();
      });
      $(".btn-success").click(function() {
        var id = $(".customParameter li").length;
        var liste = $(".customParameter");
        var li = $('<li id="parameter'+id+'" class="form-group"><label for="pnames['+id+']" class="control-label">Parameter '+id+':</label><span class="input-group"><span class="input-group-addon"><span>String</span></span><span class="input-group-addon" style="width: 50%;"><input name="pnames[]" placeholder="Parameter ['+id+'] Name" id="pnames['+id+']" value="" class="form-control" type="text"></span><span class="input-group-addon" style="width: 50%;"><input name="pvalues[]" placeholder="Parameter ['+id+'] Value" id="pvalues['+id+']" value="" class="form-control" type="text"></span><span class="input-group-addon"><button type="button" data-id="parameter'+id+'" class="input-group btn btn-danger"><span class="fa fa-minus"></span></button></span></span></li>');
        liste.append(li);
        $(".customParameter li button.btn-danger").click(function() {
          var id = $(this).data('id');
          console.log(id);
          $("#"+id).remove();
        });
      });
    });