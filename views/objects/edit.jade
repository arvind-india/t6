doctype html
html(lang='en')
  include ../includes/head.jade
  body
    include ../includes/navbar.jade

    .-o-container-fluid
      .row.side-body.hidden-xs
        .col-sm-12
          h2.fa.fa-2x.fa-cube &nbsp;Object&nbsp;
            strong #{object.name}

    .-o-container-fluid
      .row.side-body
        .col-sm-12
          h3 Update an Object to your shelves
          form(action="/objects/#{object.id}/edit", method="post")
            .form-group
              label.control-label(for="name") Object Name:
                span.mandatory *
              input.form-control(type="text", name="name", placeholder="Object Name", id="name", value="#{object.name}")

            .form-group
              label.control-label(for="Type") Type:
                span.mandatory *
              select.form-control(type="text", name="type", id="type")
                - for(type in types) {
                    if ( types[type] == object.type )
                      option(value='#{types[type]}', selected) #{types[type]}
                    else
                      option(value='#{types[type]}') #{types[type]}
                - }
            .form-group
              label.control-label(for="Description") Description:
              textarea.form-control.vresize(name="description", placeholder="Object description", id="Description") #{object.description}

            .form-group
              label.control-label Public Visibility:
              br/
              input(type='radio', name='isPublic', value='true', id='isPublic', checked=(object.isPublic=='true' ? "checked" : undefined))
              label.control-label(for="isPublic") &nbsp;Yes
              | &nbsp;&nbsp;
              input(type='radio', name='isPublic', value='false', id='isNotPublic', checked=(object.isPublic=='false' ? "checked" : undefined))
              label.control-label(for="isNotPublic") &nbsp;No

            hr/
            .form-group
              label.control-label(for="position") Position/Location:
              span.input-group
                span.input-group-addon
                  span.fa.fa-map-marker
                input.form-control(type="text", name="position", placeholder="Object position (living, dressing, etc)", id="position", value=(object.position!==undefined ? object.position : undefined))

            .form-group
              label.control-label(for="Longitude") Longitude:
              span.input-group
                span.input-group-addon
                  span.fa.fa-map
                input.form-control(type='text', name="longitude", placeholder="Longitude", id="Longitude", value=(object.longitude!==undefined ? object.longitude : undefined))

            .form-group
              label.control-label(for="Latitude") Latitude:
              span.input-group
                span.input-group-addon
                  span.fa.fa-map
                input.form-control(type='text', name="latitude", placeholder="Latitude", id="Latitude", value=(object.latitude!==undefined ? object.latitude : undefined))

            .form-group
              label.control-label(for="ipv6") Map:
              #osm(style='height:350px;width:100%')

            hr/
            .form-group
              label.control-label(for="ipv4") Ip v4:
              span.input-group
                span.input-group-addon
                  span IP
                input.form-control(type="text", name="ipv4", placeholder="Ip v4: 192.168.0.1", id="ipv4", value=(object.ipv4!==undefined ? object.ipv4 : undefined))

            .form-group
              label.control-label(for="ipv6") Ip v6:
              span.input-group
                span.input-group-addon
                  span IP
                input.form-control(type="text", name="ipv6", placeholder="Ip v6", id="ipv6", value=(object.ipv6!==undefined ? object.ipv6 : undefined))
              
            hr/
            h3 Custom Parameters
            .table-header
              span.input-group
                strong Type
              span.input-group
                strong Name
              span.input-group
                strong Value
              span.input-group
                strong 

            ul.customParameter.list-unstyled
              - for( p in object.parameters )
                li.form-group(id="parameter#{p}")
                   label.control-label(for="pnames[#{p}]") Parameter #{[p]}:
                   span.input-group
                     span.input-group-addon
                       span #{object.parameters[p].type}
                     span.input-group-addon(style="width: 50%;")
                       input.form-control(type="text", name="pnames[]", placeholder="Parameter [#{p}] Name", id="pnames[#{p}]", value=(object.parameters[p].name!==undefined ? object.parameters[p].name : undefined))
                     span.input-group-addon(style="width: 50%;")
                       input.form-control(type="text", name="pvalues[]", placeholder="Parameter [#{p}] Value", id="pvalues[#{p}]", value=(object.parameters[p].value!==undefined ? object.parameters[p].value : undefined))
                     span.input-group-addon
                       button.input-group.btn.btn-danger(type="button", data-id="parameter#{p}")
                         span.fa.fa-minus
              -end

            button.input-group.btn.btn-success(type="button")
              span.fa.fa-plus

            .form-group
              p 

            .form-group
              a.btn.btn-default.btn-sm(href="/objects/#{object.id}")
                span.fa.fa-cube Back to Object
              button.btn.btn-primary.m-t.pull-right(type="submit", value="Update Object")
                span.fa.fa-pencil-square-o  Update Object
              | &nbsp;
              
          p &nbsp; 

    include ../includes/foot.jade
  - if ( !object.longitude ) {
    - object.longitude = 0
  - }
  - if ( !object.latitude ) {
    - object.latitude = 0
  - }
  script(type='text/javascript', src='//www.openlayers.org/api/OpenLayers.js')
  script(type='text/javascript').
    var marker;
    var map;
    
    OpenLayers.Control.Click = OpenLayers.Class(OpenLayers.Control, { 
      defaultHandlerOptions: {
        'single': true,
        'double': false,
        'pixelTolerance': 0,
        'stopSingle': false,
        'stopDouble': false
      },
      initialize: function(options) {
        this.handlerOptions = OpenLayers.Util.extend(
          {}, this.defaultHandlerOptions
        );
        OpenLayers.Control.prototype.initialize.apply(
          this, arguments
        ); 
        this.handler = new OpenLayers.Handler.Click(
          this, {
            'click': this.trigger
          }, this.handlerOptions
        );
      }, 
      trigger: function(e) {
        var pixel = map.getLonLatFromViewPortPx(e.xy);
        target = pixel.transform(
          new OpenLayers.Projection("EPSG:900913"), 
          new OpenLayers.Projection("EPSG:4326")
        );
        //marker.moveTo( target );
        $('#Longitude').val(Math.round(target.lon*100000)/100000);
        $('#Latitude').val(Math.round(target.lat*100000)/100000);
      }
    });
    
    $(document).ready(function() {
      map = new OpenLayers.Map("osm");
      layer = new OpenLayers.Layer.OSM();
      map.addLayer(layer);
      var lonLat = new OpenLayers.LonLat( #{object.longitude}, #{object.latitude} )
      .transform(
        new OpenLayers.Projection("EPSG:4326"), // transform from WGS 1984
          map.getProjectionObject() // to Spherical Mercator Projection
      );
      var markers = new OpenLayers.Layer.Markers( "Markers" );
      map.addLayer(markers);
      marker = new OpenLayers.Marker(lonLat);
      //marker.icon.url = '';
      markers.addMarker(marker);
      map.setCenter (lonLat, 18);
      var click = new OpenLayers.Control.Click();
      map.addControl(click);
      click.activate();
    });
    
    $(document).ready(function() {
      $(".customParameter li button.btn-danger").click(function() {
        var id = $(this).data('id');
        $("#"+id).remove();
      });
      $(".btn-success").click(function() {
        var id = $(".customParameter li").length;
        var liste = $(".customParameter");
        var li = $('<li id="parameter'+id+'" class="form-group"><label for="pnames['+id+']" class="control-label">Parameter '+id+':</label><span class="input-group"><span class="input-group-addon"><span>String</span></span><span class="input-group-addon" style="width: 50%;"><input name="pnames[]" placeholder="Parameter ['+id+'] Name" id="pnames['+id+']" value="" class="form-control" type="text"></span><span class="input-group-addon" style="width: 50%;"><input name="pvalues[]" placeholder="Parameter ['+id+'] Value" id="pvalues['+id+']" value="" class="form-control" type="text"></span><span class="input-group-addon"><button type="button" data-id="parameter'+id+'" class="input-group btn btn-danger"><span class="fa fa-minus"></span></button></span></span></li>');
        liste.append(li);
        $(".customParameter li button.btn-danger").click(function() {
          var id = $(this).data('id');
          console.log(id);
          $("#"+id).remove();
        });
      });
    });