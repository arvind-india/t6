doctype html
html(lang='en')
  include ../includes/head.jade
  body
    include ../includes/navbar.jade

    .-o-container-fluid
      .row.side-body.hidden-xs
        .col-sm-12
          h2.fa.fa-2x.fa-cube &nbsp;Object&nbsp;
            strong #{object.name}
          if (message && message.type && message.value)
            div.alert(class='alert-#{message.type}', role='alert') !{message.value}

      .row.side-body
        .col-sm-12.col-md-8.col-md-offset-0
          div
            dl.dl-horizontal
              dt Name:
              dd
                strong #{object.name}
                br/
                i Created: #{moment(object.meta.created).format('DD/MM/YYYY, HH:mm')} - Updated: #{moment(object.meta.updated).format('DD/MM/YYYY, HH:mm')} - Revision: #{object.meta.revision}
            
              dt Id:
              dd
                span.label.label-warning #{object.id} 
 
              dt Type:
              - if (object.type == 'rooter')
                - var style = "fa fa-inbox"
              - else if (object.type == 'sensor')
                - var style = "fa fa-tint"
              - else if (object.type == 'computer')
                - var style = "fa fa-desktop"
              - else if (object.type == 'laptop')
                - var style = "fa fa-laptop"
              - else if (object.type == 'desktop')
                - var style = "fa fa-desktop"
              - else if (object.type == 'phone')
                - var style = "fa fa-phone"
              - else if (object.type == 'smartphone')
                - var style = "fa fa-phone"
              - else if (object.type == 'nodemcu')
                - var style = "fa fa-shield"
              - else if (object.type == 'tablet')
                - var style = "fa fa-tablet"
              - else if (object.type == 'server')
                - var style = "fa fa-tasks"
              - else if (object.type == 'printer')
                - var style = "fa fa-print"
              - end
              dd
                a.label.label-default(href='#', class="#{style}")   #{object.type}
            
              -if (object.position)
                dt Position/Location:
                dd
                  a.label.label-primary(href='#') #{object.position}
              -end
            
              -if (object.ipv4)
                dt Ip v4:
                dd
                  span.label.label-danger #{object.ipv4}
              -end
            
              -if (object.ipv6)
                dt Ip v6:
                dd
                  span.label.label-danger #{object.ipv6}
              -end
            
              dt Description:
              dd !{nl2br(striptags(object.description))}

              - if(object.latitude && object.longitude)
                dt Latitude:
                dd
                  span.fa.fa-map(data-toggle='tooltip', data-placement='top', title='Latitude')  #{object.latitude}

                dt Longitude:
                dd
                  span.fa.fa-map(data-toggle='tooltip', data-placement='top', title='Longitude')  #{object.longitude}
            
                dt Map:
                dd
                  a(href='geo:#{object.latitude},#{object.longitude}?z=18') Geo link
                  br/
                  #osm(style='height:350px;width:100%')
              - end
                
          .form-group
            ul.list-inline
              li
                a.btn.btn-primary.btn-sm(href='./#{object.id}/edit')
                  span.fa.fa-pencil-square-o  Edit
              
              li
                a.btn.btn-danger.btn-sm.sweet-5#remove(href='#', onclick="return false;")
                  span.fa.fa-trash-o  Remove
              
        .col-sm-12.col-md-4.col-md-offset-0
          .panel.with-nav-tabs.panel-default
            .panel-heading
              ul.nav.nav-tabs.nav-justified
                li.active(role='presentation')
                  a(href='#qrcode', data-toggle='tab') QR Code
                li
                  a(href='#parameters', data-toggle='tab') Custom Parameters
                li
                  a(href='#api', data-toggle='tab') API
            .panel-body
              .tab-content
                .tab-pane.fade.in.active#qrcode
                  h3 QR code
                  p.text-center.img-responsive.center-block !{qr_img}
                    br/
                    a.btn.btn-default.btn-sm(href='./#{object.id}/qrprint', onclick='window.open(this.href, "qrprint", "width=800,height=300,scrollbars=yes");return false;')
                      span.fa.fa-print  Print
            
                  h3 Status
                  -if (object.isPublic)
                    span Public: 
                    span.label.label-default #{object.isPublic}
                    div
                      -if (object.isPublic == 'true')
                        blockquote.fa.fa-comment  Public Object is visible to everybody.
                        a.btn.btn-primary.fa.fa-share-alt(href='./#{object.id}/public', target='_blank')  Share
                      -else
                        blockquote.fa.fa-comment  Private Object is only visible to you.
                      -end
                  -end

                .tab-pane.fade#parameters
                  -if ( object.parameters && object.parameters.length )
                    h3 Object Parameters
                    ul.list-unstyled.list-group
                      - for( p in object.parameters )
                        li.clearfix.list-group-item
                          span.label.label-primary.ellipis #{object.parameters[p].name}
                          span.pull-right  #{object.parameters[p].value} (#{object.parameters[p].type})
                      -end
                  -else
                    span That Object does not have any custom parameter.
                  -end

                .tab-pane.fade#api
                    h3 Object endpoint
                    span.label.label-default.ellipis #{baseUrl}/v2.0.1/objects/#{object.id}

                    h3 Object Parameters endpoint
                    span.label.label-default.ellipis #{baseUrl}/v2.0.1/objects/#{object.id}/:pName/
                

    include ../includes/foot.jade
  link(href='#{baseUrlCdn}/css/sweetalert/sweetalert.css', rel='stylesheet')
  script(src='#{baseUrlCdn}/js/sweetalert/sweetalert.js')
  script(src='http://www.openlayers.org/api/OpenLayers.js')
  script.
    $(document).ready(function() {
      map = new OpenLayers.Map("osm");
      map.addLayer(new OpenLayers.Layer.OSM());
      var lonLat = new OpenLayers.LonLat( #{object.longitude}, #{object.latitude} )
      .transform(
        new OpenLayers.Projection("EPSG:4326"), // transform from WGS 1984
          map.getProjectionObject() // to Spherical Mercator Projection
      );
      var markers = new OpenLayers.Layer.Markers( "Markers" );
      map.addLayer(markers);
      markers.addMarker(new OpenLayers.Marker(lonLat));
      map.setCenter (lonLat, 18);
    });

    document.querySelector('.sweet-5').onclick = function(){
      swal({
        title: "Are you sure?",
        text: "Are you sure to remove #{object.name} ?",
        type: "error",
        showCancelButton: true,
        confirmButtonClass: "btn-danger",
        confirmButtonText: "Yes, delete it!",
        cancelButtonText: "No, cancel",
        closeOnConfirm: false,
        closeOnCancel: true
      },
      function(isConfirm) {
        if (isConfirm) {
          document.location.href='./#{object.id}/remove';
        } else {
          //
        }
      });
    };